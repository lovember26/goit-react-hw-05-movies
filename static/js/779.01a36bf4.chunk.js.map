{"version":3,"file":"static/js/779.01a36bf4.chunk.js","mappings":"iOAEaA,EAAkBC,EAAAA,GAAAA,IAAH,0EAMfC,EAAaD,EAAAA,GAAAA,IAAH,2IAMVE,EAASF,EAAAA,GAAAA,EAAH,2J,SCkBnB,EA3BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OATAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAWH,GAASI,MAAK,SAAAC,GACvBN,EAAWM,EACZ,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACN,KAEF,SAACP,EAAD,UACGK,EAAQW,OAAS,EAChBX,EAAQY,KAAI,SAAAC,GAAM,OAChB,UAAChB,EAAD,YACE,SAACC,EAAD,UAASe,EAAOC,UAChB,uBAAID,EAAOE,YAFIF,EAAOG,GADR,KAOlB,yCAIP,C,+LC9BKC,EAAW,gCACXC,EAAU,mCAEHC,EAAS,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,oCACoBC,IAFlB,cACjBG,EADiB,yBAIhBA,EAAOd,KAAKe,SAJI,2CAAH,qDAOTC,EAAQ,mCAAG,WAAMrB,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iBACCf,EADD,oBACoBgB,EADpB,oBADC,cAChBG,EADgB,yBAKfA,EAAOd,MALQ,2CAAH,sDAQRiB,EAAO,mCAAG,WAAMtB,GAAN,uFACAkB,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iBACCf,EADD,4BAC4BgB,EAD5B,oBADA,cACfG,EADe,yBAKdA,EAAOd,KAAKkB,MALE,2CAAH,sDAQPpB,EAAU,mCAAG,WAAMH,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iBACCf,EADD,4BAC4BgB,EAD5B,2BADG,cAClBG,EADkB,yBAKjBA,EAAOd,KAAKe,SALK,2CAAH,sDAOVI,EAAW,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,UAChBH,EADgB,gCACgBC,EADhB,4DAC2ES,IAFvE,cACnBN,EADmB,yBAKlBA,EAAOd,KAAKe,SALM,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  padding: 30px;\n`;\n\nexport const ReviewCard = styled.div`\n  padding: 15px;\n  background-color: #f1faee;\n  border-radius: 3px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n`;\nexport const Author = styled.p`\n  background-color: #457b9d;\n  padding: 15px;\n  border-radius: 3px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n  color: #fff;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getMovies';\nimport { Author, ReviewCard, ReviewContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    try {\n      getReviews(movieId).then(data => {\n        setReviews(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n  return (\n    <ReviewContainer>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ReviewCard key={review.id}>\n            <Author>{review.author}</Author>\n            <p>{review.content}</p>\n          </ReviewCard>\n        ))\n      ) : (\n        <p> No reviews.</p>\n      )}\n    </ReviewContainer>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5c8223fe177d644ec0560696e1a12ddd';\n\nexport const getMovies = async () => {\n  const result = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return result.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const result = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result.data;\n};\n\nexport const getCast = async movieId => {\n  const result = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const result = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return result.data.results;\n};\nexport const searchMovie = async query => {\n  const result = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return result.data.results;\n};\n"],"names":["ReviewContainer","styled","ReviewCard","Author","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","data","error","console","log","length","map","review","author","content","id","BASE_URL","API_KEY","getMovies","axios","result","results","getMovie","getCast","cast","searchMovie","query"],"sourceRoot":""}